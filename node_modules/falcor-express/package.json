{
  "name": "falcor-express",
  "version": "0.1.4",
  "description": "A falcor server for express.",
  "main": "src/index.js",
  "homepage": "https://github.com/Netflix/falcor-express",
  "author": {
    "name": "Netflix",
    "url": "https://github.com/Netflix/falcor-express/authors.txt"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Netflix/falcor-express.git"
  },
  "licenses": [
    {
      "type": "Apache License, Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "scripts": {
    "lint": "node node_modules/gulp/bin/gulp.js lint",
    "test": "node node_modules/gulp/bin/gulp.js test"
  },
  "dependencies": {
    "body-parser": "^1.12.4",
    "express": "^4.11.1",
    "rx": "~2.3.24"
  },
  "devDependencies": {
    "chai": "^3.2.0",
    "eslint": "^0.21.0",
    "falcor-router": "0.2.9",
    "gulp": "^3.9.0",
    "gulp-eslint": "^0.15.0",
    "gulp-mocha": "^2.1.3",
    "sinon": "^1.15.4"
  },
  "readme": "# falcor-express\nServer middleware for falcor-express\n\nWorking usage example of the basic repro in netflix/falcor-express-demo\n\n## Usage\nMinimalistic example\n\n```javascript\nvar FalcorServer = require('falcor-express');\nvar bodyParser = require('body-parser');\nvar express = require('express');\nvar app = express();\n\nvar TestRouter = <your router here>;\n\napp.use(bodyParser.text({ type: 'text/*' }))\napp.use('/model.json', FalcorServer.dataSourceRoute(function(req, res) {\n    return new TestRouter();\n}));\n\napp.use(express.static('.'));\n\nvar server = app.listen(9090, function(err) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(\"navigate to http://localhost:9090\")\n});\n\n```\n\nExample of using a static model (for development purposes only)\n\n```javascript\nvar falcor = require('falcor');\nvar FalcorServer = require('falcor-express');\nvar bodyParser = require('body-parser');\nvar express = require('express');\nvar app = express();\n\nvar model = new falcor.Model({\n    cache: {\n        todos: [\n            {\n                name: 'get milk from corner store',\n                done: false\n            },\n            {\n                name: 'withdraw money from ATM',\n                done: true\n            }\n        ]\n    }\n});\n\napp.use(bodyParser.text({ type: 'text/*' }))\napp.use('/model.json', FalcorServer.dataSourceRoute(function(req, res) {\n    return model.asDataSource();\n}));\n\napp.use(express.static('.'));\n\nvar server = app.listen(9090, function(err) {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(\"navigate to http://localhost:9090\")\n});\n```\n\n## Development\nBefore contributing, please run the linter and the tests to be sure there are no issues.\n```\nnpm run lint\n```\nand\n```\nnpm run test\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Netflix/falcor-express/issues"
  },
  "_id": "falcor-express@0.1.4",
  "_shasum": "d2dacf8b23cde3ff62a1375deac774ffc3c13d07",
  "_from": "falcor-express@",
  "_resolved": "https://registry.npmjs.org/falcor-express/-/falcor-express-0.1.4.tgz"
}
