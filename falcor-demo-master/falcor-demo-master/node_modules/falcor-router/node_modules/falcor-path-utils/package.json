{
  "name": "falcor-path-utils",
  "version": "0.5.1",
  "description": "This repository contains utilities for transforming and manipulating Falcor paths.",
  "main": "lib/index.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Netflix/falcor-path-utils.git"
  },
  "author": {
    "name": "Netflix"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/Netflix/falcor-path-utils/issues"
  },
  "homepage": "https://github.com/Netflix/falcor-path-utils#readme",
  "devDependencies": {
    "chai": "^3.2.0",
    "falcor-json-graph": "^1.1.7",
    "sinon": "^1.15.4",
    "gulp-mocha": "~2.2.0",
    "gulp": "^3.9.0"
  },
  "readme": "# Falcor Path Utils\n \nThis repository contains utilities for transforming and manipulating Falcor paths.\n\n## Utility functions:\n\n* `collapse(paths)`<br>\n  Simplifies a set of paths. Example:\n\n  ~~~js\n  var util = require(\"falcor-path-utils\");\n  var collapsedPaths = util.collapse([\n    [\"genres\", 0, \"titles\", 0, \"name\"],\n    [\"genres\", 0, \"titles\", 0, \"rating\"],\n    [\"genres\", 0, \"titles\", 1, \"name\"],\n    [\"genres\", 0, \"titles\", 1, \"rating\"]\n  ]);\n  \n  // collapsed paths is [\"genres\", 0, \"titles\", {from: 0, to: 1}, [\"name\", \"rating\"]]\n  ~~~\n\n* `iterateKeySet(keySet, note)`<br>\n  Takes in a `keySet` and a `note` and attempts to iterate over it.\n\n* `toTree(paths)`<br>\n  Converts `paths` to a tree with null leaves. ([see spec](./test/toTree.spec.js))\n\n* `toPaths(lengths)`<br>\n  Converts a `lengthTree` to paths. ([see spec](./test/toPaths.spec.js))\n\n* `pathsComplementFromTree(paths, tree)`<br>\n  Returns a list of these `paths` that are not in the `tree`. ([see spec](./test/pathsComplementFromTree.spec.js))\n\n* `pathsComplementFromLengthTree(paths, lengthTree)`<br>\n  Like above, but for use with length tree.\n\n* `hasIntersection(tree, path, depth)`<br>\n  Tests to see if the intersection should be stripped from the total paths.\n\n* `optimizePathSets(cache, paths, maxRefFollow)`<br>\n  ([see spec](./test/optimizePathSets.spec.js))\n\n* `pathCount(pathSet)`<br>\n Returns the number of paths in a PathSet.\n \n  ~~~js\n  var util = require(\"falcor-path-utils\");\n  console.log(util.pathCount([\"titlesById\", [512, 628], [\"name\",\"rating\"]])) \n  // prints 4, because [\"titlesById\", [512, 628], [\"name\",\"rating\"]] contains...\n  // [\"titlesById\", 512, \"name\"]\n  // [\"titlesById\", 512, \"rating\"]\n  // [\"titlesById\", 628, \"name\"]\n  // [\"titlesById\", 628, \"rating\"]\n  ~~~\n",
  "readmeFilename": "README.md",
  "_id": "falcor-path-utils@0.5.1",
  "_shasum": "e05322f203d6b34cf9a407b4b75e5250849b5cdc",
  "_from": "falcor-path-utils@~0.5.0",
  "_resolved": "https://registry.npmjs.org/falcor-path-utils/-/falcor-path-utils-0.5.1.tgz"
}
